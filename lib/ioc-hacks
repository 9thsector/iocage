#!/bin/sh

# truncate mountpoint to work around 88 char mount limit on FreeBSD
__hack88_mount () {
    local _fulluuid _shortuuid

    _fulluuid="$1"
    _shortuuid="$(echo $_fulluuid|cut -f1 -d\-)"
    _mountpoint="$(__get_jail_prop mountpoint $_fulluuid)"
    _mount_len="$(echo ${_mountpoint} | cut -f4 -d\/|wc -c | awk '{print $1}')"
    _hack88="$(__get_jail_prop hack88 $_fulluuid)"

    if [ "$_hack88" == "1" ] && [ "$_mount_len" -eq "37" ] ; then
        echo "  INFO: truncating jail mountpoint"
        __set_jail_prop mountpoint=${iocroot}/jails/${_shortuuid} ${_fulluuid}
    elif [ "$_hack88" != "1" ] && [ "$_mount_len" -lt "37" ] ; then
         echo "  INFO: restoring jail mountpoint"
        __set_jail_prop mountpoint=${iocroot}/jails/${_fulluuid} ${_fulluuid}
    fi
}

# check if .defaults & jails dataset exists, if not create it
# fixes https://github.com/iocage/iocage/issues/80
__check_filesystems () {

    local _filesystems _missing
    _missing=0

    _filesystems="${iocroot}
                  ${iocroot}/.defaults
                  ${iocroot}/jails
                  ${iocroot}/download
                  ${iocroot}/releases"

    for _fs in $(echo ${_filesystems}) ; do
        zfs get -H creation ${pool}${_fs} > /dev/null 2>&1
        if [ $? -ne 0 ] ; then
            _missing=1
            echo "  INFO: Creating ${pool}${_fs}"
            zfs create -p ${pool}${_fs}
            zfs set mountpoint=${_fs} ${pool}${_fs}
        fi
    done

    if [ ${_missing} -gt 0 ] ; then
        zfs mount -a
    fi
}
