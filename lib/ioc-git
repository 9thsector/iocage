#!/bin/sh
__pull () {
    local _gitlocation

    _gitlocation="$(zfs get -H -o value org.freebsd.iocage:gitlocation \
               ${pool}${iocroot}/.defaults)"

    # Make sure git is installed.
    if [ ! -e "/usr/local/bin/git" ] ; then
        echo "  ERROR: Git is not installed. Please install git first."
        exit 1
    fi

    # Create an empty jail structure that we clone the git repo into
    # simulates __create_jail -e but without creating directories
    # git clone complains about that.
    zfs create -o compression=lz4 -p ${pool}/iocage/jails/$uuid/root
    zfs create -o compression=lz4 ${pool}/$jail_zfs_dataset
    zfs set mountpoint=none ${pool}/$jail_zfs_dataset
    zfs set jailed=on ${pool}/$jail_zfs_dataset
    __configure_jail ${pool}/iocage/jails/$uuid

    # Begin git clone process
    cd $iocroot/jails/${uuid}/root
    if [ -z "$iocset_branch" ] ; then
        git clone --depth 1 "$_gitlocation/$2" .
    else
        git clone -b "$iocset_branch" --depth 1 "$_gitlocation/$2" .
    fi

    # Check if user has a custom git location set
    if [ "$_gitlocation" != "https://github.com/iocage/cages" ] ; then
        touch $iocroot/jails/$uuid/fstab
    else
        echo "  WARNING: Pushing will be disabled, please set a custom repo."
        echo "  You can do this by issuing: iocage set gitlocation=URL default"
        git branch --unset-upstream
        touch $iocroot/jails/$uuid/fstab
    fi

    # Check for rc.conf and resolv.conf, create them if they don't exist.
    if [ ! -e "$iocroot/jails/${uuid}/root/etc/rc.conf" ] ; then
        echo "hostname=\"${hostname}\"" > \
        $iocroot/jails/${uuid}/root/etc/rc.conf
        __jail_rc_conf >> \
        $iocroot/jails/${uuid}/root/etc/rc.conf
    fi

    if [ ! -e "$iocroot/jails/${uuid}/root/etc/resolv.conf" ] ; then
        __resolv_conf ${uuid} > $iocroot/jails/${uuid}/root/etc/resolv.conf
    fi
}

__push () {
  local _gitlocation _gitrepo _answer _match

  _gitlocation="$(zfs get -H -o value org.freebsd.iocage:gitlocation \
             ${pool}${iocroot}/.defaults)"

  # Make sure git is installed.
  if [ ! -e "/usr/local/bin/git" ] ; then
      echo "  ERROR: Git is not installed. Please install git first."
      exit 1
  fi

  # Check if user has a custom git location set
  if [ "$_gitlocation" != "https://github.com/iocage/cages" ] ; then
      # Will add all files and open a dialog for a git commit
      git add -A
      git commit
      git push
  else
      echo -n "Please enter a git repo to push to: "
      read _answer
      if [ -z "$_answer" ] ; then
          _answer="$_gitrepo"
      else
          _gitrepo="$_answer"
          _match="1"
          git commit -a
          git push -u "$2"
    if [ -z $_match ] ; then
        echo "Invalid repo $_gitrepo specified. Exiting."
        exit 1
    fi
  fi
fi
}
